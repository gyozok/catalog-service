name: Commit stage
on: [push, workflow_dispatch]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gyozok/catalog-service
  VERSION: latest

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: |
          chmod +x mvnw
          ./mvnw install
  package:
    name: Package and Publish
    needs: [build]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Build container image
        run: |
          chmod +x mvnw
          ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#      - name: OCI image vulnerability scanning
#        uses: anchore/scan-action@v3
#        id: scan
#        with:
#          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#          fail-build: false
#          severity-cutoff: high
#      - name: Upload vulnerability report
#        uses: github/codeql-action/upload-sarif@v2
#        if: success() || failure()
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: gyozok
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ghcr.io/gyozok/catalog-service:latest
#        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
